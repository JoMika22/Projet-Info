#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_PERSOS 10
#define MAX_TEAM_NAME 50

typedef struct {
    char* nom;
    int nb_rounds;
    int reload;
    char* description;
    int effets;
} SpecialAttack;

typedef struct {
    char* nom;
    int PV;
    int PVmax;
    int att;
    int def;
    int agi;
    int vit;
    SpecialAttack* special;
    int effet_actif;
} Perso;

typedef struct {
    char nom_equipe[MAX_TEAM_NAME];
    Perso** membres;  
} Equipe;

SpecialAttack special_attacks[10] = {
    {"Éclair Foudroyant", 3, 5, "Décharge un éclair électrique puissant", -1},
    {"Susanoo Protecteur", 4, 6, "Invoque une armure spirituelle", 1},
    {"Coup de Bicycle", 2, 4, "Frappe acrobatique dévastatrice", 1},
    {"Super Splash", 3, 5, "Attaque aquatique massive", -1},
    {"Puissance Ogre", 4, 6, "Déchaîne la force primitive", 1},
    {"Champions League Strike", 2, 4, "Frappe précise enroulée", 1},
    {"Santoryu Ougi", 3, 5, "Triple attaque éclair", 1},
    {"Bubble Beam", 3, 4, "Canon à bulles paralysant", -1},
    {"Kamehameha", 1, 7, "Attaque énergétique ultime", -1},
    {"Muffin Assault", 2, 3, "Muffins empoisonnés", -1}
};

Perso** creer_persos_disponibles() {
    Perso** persos = malloc(sizeof(Perso*) * MAX_PERSOS);
    if (!persos) {
        perror("Erreur d'allocation mémoire");
        exit(1);
    }

    for (int i = 0; i < MAX_PERSOS; i++) {
        persos[i] = malloc(sizeof(Perso));
        if (!persos[i]) {
            perror("Erreur d'allocation mémoire perso");
            exit(1);
        }
    }

    *persos[0] = (Perso){"Pikachu", 100, 100, 100, 80, 30, 115, &special_attacks[0], 0};
    *persos[1] = (Perso){"Madara", 90, 90, 120, 90, 40, 95, &special_attacks[1], 0};
    *persos[2] = (Perso){"Salah", 85, 85, 115, 85, 15, 105, &special_attacks[2], 0};
    *persos[3] = (Perso){"El Primo", 225, 225, 70, 120, 5, 50, &special_attacks[3], 0};
    *persos[4] = (Perso){"Shrek", 110, 110, 110, 110, 15, 110, &special_attacks[4], 0};
    *persos[5] = (Perso){"CR7", 95, 95, 130, 85, 45, 120, &special_attacks[5], 0};
    *persos[6] = (Perso){"Zoro", 105, 105, 125, 95, 25, 100, &special_attacks[6], 0};
    *persos[7] = (Perso){"Bob l'éponge", 150, 150, 80, 100, 20, 80, &special_attacks[7], 0};
    *persos[8] = (Perso){"Goku", 200, 200, 140, 90, 50, 130, &special_attacks[8], 0};
    *persos[9] = (Perso){"Muffin Man", 80, 80, 90, 70, 10, 60, &special_attacks[9], 0};

    return persos;
}

void liberer_persos(Perso** persos) {
    for (int i = 0; i < MAX_PERSOS; i++) {
        free(persos[i]);
    }
    free(persos);
}

void afficher_perso(Perso* p) {
    printf("\n--- %s ---\n", p->nom);
    printf("PV: %d/%d\n", p->PV, p->PVmax);
    printf("Attaque: %d\n", p->att);
    printf("Défense: %d\n", p->def);
    printf("Agilité: %d\n", p->agi);
    printf("Vitesse: %d\n", p->vit);
    printf("Spécial: %s (%s)\n", p->special->nom, p->special->description);
}

void afficher_menu(Perso** persos) {
    printf("\n=== CHOIX DES PERSONNAGES ===\n");
    for (int i = 0; i < MAX_PERSOS; i++) {
        printf("%d. %s\n", i + 1, persos[i]->nom);
    }
    printf("=============================\n");
}

Equipe* creer_equipe(Perso** persos_disponibles) {
    Equipe* e = malloc(sizeof(Equipe));
    if (!e) {
        perror("Erreur d'allocation mémoire équipe");
        exit(1);
    }

    printf("\nNom de l'équipe : ");
    fgets(e->nom_equipe, MAX_TEAM_NAME, stdin);
    e->nom_equipe[strcspn(e->nom_equipe, "\n")] = 0;

    e->membres = malloc(sizeof(Perso*) * 2);
    if (!e->membres) {
        perror("Erreur d'allocation mémoire membres");
        exit(1);
    }

    int choix1, choix2;
    afficher_menu(persos_disponibles);
    printf("Choix du personnage 1 : ");
    scanf("%d", &choix1);
    getchar();
    while (choix1 < 1 || choix1 > MAX_PERSOS) {
        printf("Choix invalide. Réessayez : ");
        scanf("%d", &choix1);
        getchar();
    }
    e->membres[0] = persos_disponibles[choix1 - 1];

    afficher_menu(persos_disponibles);
    printf("Choix du personnage 2 : ");
    scanf("%d", &choix2);
    getchar();
    while (choix2 < 1 || choix2 > MAX_PERSOS || choix2 == choix1) {
        if (choix2 == choix1) {
            printf("Vous avez déjà choisi ce personnage. Réessayez : ");
        } else {
            printf("Choix invalide. Réessayez : ");
        }
        scanf("%d", &choix2);
        getchar();
    }
    e->membres[1] = persos_disponibles[choix2 - 1];

    return e;
}

void afficher_equipe(Equipe* e) {
    printf("\n=== ÉQUIPE '%s' ===\n", e->nom_equipe);
    for (int i = 0; i < 2; i++) {
        afficher_perso(e->membres[i]);
    }
    printf("=======================\n");
}

void liberer_equipe(Equipe* e) {
    free(e->membres);
    free(e);
}

int main() {
    Perso** persos_disponibles = creer_persos_disponibles();
    Equipe* joueur = creer_equipe(persos_disponibles);
    afficher_equipe(joueur);
    liberer_equipe(joueur);
    liberer_persos(persos_disponibles);
    return 0;
}
